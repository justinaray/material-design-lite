{"version":3,"sources":["button.js","ripple.js","mdlComponentHandler.js","rAF.js","material.js"],"names":["MaterialButton","element","this","element_","init","MaterialRipple","componentHandler","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","undefined","upgradeDomInternal","jsClass","cssClass","registeredClass","elements","document","querySelectorAll","n","upgradeElementInternal","dataUpgraded","getAttribute","indexOf","setAttribute","instance","classConstructor","componentConfigProperty_","createdComponents_","push","callbacks","forEach","callback","widget","ev","createEvent","initEvent","dispatchEvent","registerInternal","config","newConfig","constructor","classAsString","item","prototype","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","findCreatedComponentByNodeInternal","node","component","deconstructComponentInternal","downgradeMethod_","componentIndex","splice","upgrades","dataset","upgraded","split","componentPlace","join","downgradeNodesInternal","nodes","downgradeNode","Array","NodeList","Node","upgradeDom","upgradeElement","upgradeAllRegistered","registerUpgradedCallback","register","downgradeElements","window","addEventListener","createElement","documentElement","classList","add","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler","event","blur","disable","disabled","enable","contains","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","mdlDowngrade_","removeEventListener","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_CENTER","RIPPLE_EFFECT_IGNORE_EVENTS","IS_ANIMATING","IS_VISIBLE","downHandler_","style","width","height","rect","getBoundingClientRect","boundHeight","boundWidth","rippleSize_","sqrt","type","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","y","bound","currentTarget","clientX","clientY","round","touches","left","top","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","remove","recentering","querySelector","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","start","transformString","scale","size","offset","webkitTransform","msTransform","transform"],"mappings":"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","file":"material.min.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Button MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialButton(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialButton.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialButton.prototype.CssClasses_ = {\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle blur of element.\n * @param {HTMLElement} element The instance of a button we want to blur.\n * @private\n */\nMaterialButton.prototype.blurHandler = function(event) {\n  'use strict';\n\n  if (event) {\n    this.element_.blur();\n  }\n};\n\n// Public methods.\n\n/**\n * Disable button.\n * @public\n */\nMaterialButton.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable button.\n * @public\n */\nMaterialButton.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Initialize element.\n */\nMaterialButton.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      this.rippleElement_ = document.createElement('span');\n      this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(this.rippleElement_);\n      this.boundRippleBlurHandler = this.blurHandler.bind(this);\n      this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n      this.element_.appendChild(rippleContainer);\n    }\n    this.boundButtonBlurHandler = this.blurHandler.bind(this);\n    this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n    this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n  }\n};\n\n/**\n * Downgrade the element.\n */\nMaterialButton.prototype.mdlDowngrade_ = function() {\n  'use strict';\n  if (this.rippleElement_) {\n    this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);\n  }\n  this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);\n  this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialButton,\n  classAsString: 'MaterialButton',\n  cssClass: 'mdl-js-button'\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n  INITIAL_SIZE: '1px',\n  INITIAL_OPACITY: '0.4',\n  FINAL_OPACITY: '0',\n  FINAL_SCALE: ''\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  IS_ANIMATING: 'is-animating',\n  IS_VISIBLE: 'is-visible'\n};\n\n/**\n * Handle mouse / finger down on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function(event) {\n  'use strict';\n\n  if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n    var rect = this.element_.getBoundingClientRect();\n    this.boundHeight = rect.height;\n    this.boundWidth = rect.width;\n    this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n        rect.height * rect.height) * 2 + 2;\n    this.rippleElement_.style.width = this.rippleSize_ + 'px';\n    this.rippleElement_.style.height = this.rippleSize_ + 'px';\n  }\n\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n    this.ignoringMouseDown_ = false;\n  } else {\n    if (event.type === 'touchstart') {\n      this.ignoringMouseDown_ = true;\n    }\n    var frameCount = this.getFrameCount();\n    if (frameCount > 0) {\n      return;\n    }\n    this.setFrameCount(1);\n    var bound = event.currentTarget.getBoundingClientRect();\n    var x;\n    var y;\n    // Check if we are handling a keyboard click.\n    if (event.clientX === 0 && event.clientY === 0) {\n      x = Math.round(bound.width / 2);\n      y = Math.round(bound.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      x = Math.round(clientX - bound.left);\n      y = Math.round(clientY - bound.top);\n    }\n    this.setRippleXY(x, y);\n    this.setRippleStyles(true);\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n  }\n};\n\n/**\n * Handle mouse / finger up on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function(event) {\n  'use strict';\n\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.\n  if (event && event.detail !== 2) {\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n    if (!this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n      this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n      this.frameCount_ = 0;\n      this.rippleSize_ = 0;\n      this.x_ = 0;\n      this.y_ = 0;\n\n      // Touch start produces a compat mouse down event, which would cause a\n      // second ripples. To avoid that, we use this property to ignore the first\n      // mouse down after a touch start.\n      this.ignoringMouseDown_ = false;\n\n      this.boundDownHandler = this.downHandler_.bind(this);\n      this.element_.addEventListener('mousedown',\n        this.boundDownHandler);\n      this.element_.addEventListener('touchstart',\n          this.boundDownHandler);\n\n      this.boundUpHandler = this.upHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundUpHandler);\n      this.element_.addEventListener('mouseleave', this.boundUpHandler);\n      this.element_.addEventListener('touchend', this.boundUpHandler);\n      this.element_.addEventListener('blur', this.boundUpHandler);\n\n      this.getFrameCount = function() {\n        return this.frameCount_;\n      };\n\n      this.setFrameCount = function(fC) {\n        this.frameCount_ = fC;\n      };\n\n      this.getRippleElement = function() {\n        return this.rippleElement_;\n      };\n\n      this.setRippleXY = function(newX, newY) {\n        this.x_ = newX;\n        this.y_ = newY;\n      };\n\n      this.setRippleStyles = function(start) {\n        if (this.rippleElement_ !== null) {\n          var transformString;\n          var scale;\n          var size;\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n          if (start) {\n            scale = this.Constant_.INITIAL_SCALE;\n            size = this.Constant_.INITIAL_SIZE;\n          } else {\n            scale = this.Constant_.FINAL_SCALE;\n            size = this.rippleSize_ + 'px';\n            if (recentering) {\n              offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                this.boundHeight / 2 + 'px)';\n            }\n          }\n\n          transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n          this.rippleElement_.style.webkitTransform = transformString;\n          this.rippleElement_.style.msTransform = transformString;\n          this.rippleElement_.style.transform = transformString;\n\n          if (start) {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n          } else {\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n          }\n        }\n      };\n\n      this.animFrameHandler = function() {\n        if (this.frameCount_-- > 0) {\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        } else {\n          this.setRippleStyles(false);\n        }\n      };\n    }\n  }\n};\n\n/*\n* Downgrade the component\n*/\nMaterialRipple.prototype.mdlDowngrade_ = function() {\n  'use strict';\n  this.element_.removeEventListener('mousedown',\n  this.boundDownHandler);\n  this.element_.removeEventListener('touchstart',\n      this.boundDownHandler);\n\n  this.element_.removeEventListener('mouseup', this.boundUpHandler);\n  this.element_.removeEventListener('mouseleave', this.boundUpHandler);\n  this.element_.removeEventListener('touchend', this.boundUpHandler);\n  this.element_.removeEventListener('blur', this.boundUpHandler);\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRipple,\n  classAsString: 'MaterialRipple',\n  cssClass: 'mdl-js-ripple-effect',\n  widget: false\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this pattern design here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @author Jason Mayes.\n */\n/* exported componentHandler */\nvar componentHandler = (function() {\n  'use strict';\n\n  var registeredComponents_ = [];\n  var createdComponents_ = [];\n  var downgradeMethod_ = 'mdlDowngrade_';\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   * @param {string} name The name of a class we want to use.\n   * @param {object} optReplace Optional object to replace match with.\n   * @return {object | false}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   * @param {string} jsClass the programatic name of the element class we need\n   * to create a new instance of.\n   * @param {string} cssClass the name of the CSS class elements of this type\n   * will have.\n   */\n  function upgradeDomInternal(jsClass, cssClass) {\n    if (jsClass === undefined && cssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      if (cssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          cssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + cssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   * @param {HTMLElement} element The element we wish to upgrade.\n   * @param {string} jsClass The name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, jsClass) {\n    // Only upgrade elements that have not already been upgraded.\n    var dataUpgraded = element.getAttribute('data-upgraded');\n\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {\n      // Upgrade element.\n      if (dataUpgraded === null) {\n        dataUpgraded = '';\n      }\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);\n      var registeredClass = findRegisteredClass_(jsClass);\n      if (registeredClass) {\n        // new\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        registeredClass.callbacks.forEach(function(callback) {\n          callback(element);\n        });\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[jsClass] = instance;\n        }\n      } else {\n        throw 'Unable to find a registered component for the given class.';\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   * @param {object} config An object containing:\n   * {constructor: Constructor, classAsString: string, cssClass: string}\n   */\n  function registerInternal(config) {\n    var newConfig = {\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'widget': config.widget === undefined ? true : config.widget,\n      'callbacks': []\n    };\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw 'The provided cssClass has already been registered.';\n      }\n      if (item.className === newConfig.className) {\n        throw 'The provided className has already been registered';\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw 'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.';\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function} callback The function to call upon an upgrade. This\n   * function should expect 1 parameter - the HTMLElement which got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Finds a created component by a given DOM node.\n   *\n   * @param {!Element} node\n   * @return {*}\n   */\n  function findCreatedComponentByNodeInternal(node) {\n    for (var n = 0; n < createdComponents_.length; n++) {\n      var component = createdComponents_[n];\n      if (component.element_ === node) {\n        return component;\n      }\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {*} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component &&\n        component[componentConfigProperty_]\n          .classConstructor.prototype\n          .hasOwnProperty(downgradeMethod_)) {\n      component[downgradeMethod_]();\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.dataset.upgraded.split(',');\n      var componentPlace = upgrades.indexOf(\n          component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.dataset.upgraded = upgrades.join(',');\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {*} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    var downgradeNode = function(node) {\n      deconstructComponentInternal(findCreatedComponentByNodeInternal(node));\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw 'Invalid argument provided to downgrade MDL nodes.';\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement =\n        componentHandler.register = function() {};\n  }\n});\n","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\n(function() {\n'use strict';\n\nif (!Date.now) {\n  Date.now = function() { return new Date().getTime(); };\n}\n\nvar vendors = ['webkit', 'moz'];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  var vp = vendors[i];\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||\n  window[vp + 'CancelRequestAnimationFrame']);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;\n  window.requestAnimationFrame = function(callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function() { callback(lastTime = nextTime); },\n                        nextTime - now);\n    };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\n})();\n\n","/**\n * material-design-lite - Material Design Components in CSS, JS and HTML\n * @version v1.0.0-rc.1\n * @link https://github.com/google/material-design-lite\n * @license Apache-2\n */\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this pattern design here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @author Jason Mayes.\n */\n/* exported componentHandler */\nvar componentHandler = (function() {\n  'use strict';\n\n  var registeredComponents_ = [];\n  var createdComponents_ = [];\n  var downgradeMethod_ = 'mdlDowngrade_';\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   * @param {string} name The name of a class we want to use.\n   * @param {object} optReplace Optional object to replace match with.\n   * @return {object | false}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (optReplace !== undefined) {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   * @param {string} jsClass the programatic name of the element class we need\n   * to create a new instance of.\n   * @param {string} cssClass the name of the CSS class elements of this type\n   * will have.\n   */\n  function upgradeDomInternal(jsClass, cssClass) {\n    if (jsClass === undefined && cssClass === undefined) {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      if (cssClass === undefined) {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          cssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + cssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   * @param {HTMLElement} element The element we wish to upgrade.\n   * @param {string} jsClass The name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, jsClass) {\n    // Only upgrade elements that have not already been upgraded.\n    var dataUpgraded = element.getAttribute('data-upgraded');\n\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {\n      // Upgrade element.\n      if (dataUpgraded === null) {\n        dataUpgraded = '';\n      }\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);\n      var registeredClass = findRegisteredClass_(jsClass);\n      if (registeredClass) {\n        // new\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        registeredClass.callbacks.forEach(function(callback) {\n          callback(element);\n        });\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[jsClass] = instance;\n        }\n      } else {\n        throw 'Unable to find a registered component for the given class.';\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   * @param {object} config An object containing:\n   * {constructor: Constructor, classAsString: string, cssClass: string}\n   */\n  function registerInternal(config) {\n    var newConfig = {\n      'classConstructor': config.constructor,\n      'className': config.classAsString,\n      'cssClass': config.cssClass,\n      'widget': config.widget === undefined ? true : config.widget,\n      'callbacks': []\n    };\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw 'The provided cssClass has already been registered.';\n      }\n      if (item.className === newConfig.className) {\n        throw 'The provided className has already been registered';\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw 'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.';\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function} callback The function to call upon an upgrade. This\n   * function should expect 1 parameter - the HTMLElement which got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Finds a created component by a given DOM node.\n   *\n   * @param {!Element} node\n   * @return {*}\n   */\n  function findCreatedComponentByNodeInternal(node) {\n    for (var n = 0; n < createdComponents_.length; n++) {\n      var component = createdComponents_[n];\n      if (component.element_ === node) {\n        return component;\n      }\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {*} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component &&\n        component[componentConfigProperty_]\n          .classConstructor.prototype\n          .hasOwnProperty(downgradeMethod_)) {\n      component[downgradeMethod_]();\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.dataset.upgraded.split(',');\n      var componentPlace = upgrades.indexOf(\n          component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.dataset.upgraded = upgrades.join(',');\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {*} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    var downgradeNode = function(node) {\n      deconstructComponentInternal(findCreatedComponentByNodeInternal(node));\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw 'Invalid argument provided to downgrade MDL nodes.';\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    componentHandler.upgradeElement =\n        componentHandler.register = function() {};\n  }\n});\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\n// MIT license\n\n(function() {\n'use strict';\n\nif (!Date.now) {\n  Date.now = function() { return new Date().getTime(); };\n}\n\nvar vendors = ['webkit', 'moz'];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  var vp = vendors[i];\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||\n  window[vp + 'CancelRequestAnimationFrame']);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;\n  window.requestAnimationFrame = function(callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function() { callback(lastTime = nextTime); },\n                        nextTime - now);\n    };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\n})();\n\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Button MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialButton(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialButton.prototype.Constant_ = {\n  // None for now.\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialButton.prototype.CssClasses_ = {\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n  RIPPLE: 'mdl-ripple'\n};\n\n/**\n * Handle blur of element.\n * @param {HTMLElement} element The instance of a button we want to blur.\n * @private\n */\nMaterialButton.prototype.blurHandler = function(event) {\n  'use strict';\n\n  if (event) {\n    this.element_.blur();\n  }\n};\n\n// Public methods.\n\n/**\n * Disable button.\n * @public\n */\nMaterialButton.prototype.disable = function() {\n  'use strict';\n\n  this.element_.disabled = true;\n};\n\n/**\n * Enable button.\n * @public\n */\nMaterialButton.prototype.enable = function() {\n  'use strict';\n\n  this.element_.disabled = false;\n};\n\n/**\n * Initialize element.\n */\nMaterialButton.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n      this.rippleElement_ = document.createElement('span');\n      this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(this.rippleElement_);\n      this.boundRippleBlurHandler = this.blurHandler.bind(this);\n      this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n      this.element_.appendChild(rippleContainer);\n    }\n    this.boundButtonBlurHandler = this.blurHandler.bind(this);\n    this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n    this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n  }\n};\n\n/**\n * Downgrade the element.\n */\nMaterialButton.prototype.mdlDowngrade_ = function() {\n  'use strict';\n  if (this.rippleElement_) {\n    this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);\n  }\n  this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);\n  this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialButton,\n  classAsString: 'MaterialButton',\n  cssClass: 'mdl-js-button'\n});\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class constructor for Ripple MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n * @param {HTMLElement} element The element that will be upgraded.\n */\nfunction MaterialRipple(element) {\n  'use strict';\n\n  this.element_ = element;\n\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n * @enum {string | number}\n * @private\n */\nMaterialRipple.prototype.Constant_ = {\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n  INITIAL_SIZE: '1px',\n  INITIAL_OPACITY: '0.4',\n  FINAL_OPACITY: '0',\n  FINAL_SCALE: ''\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n * @enum {string}\n * @private\n */\nMaterialRipple.prototype.CssClasses_ = {\n  RIPPLE_CENTER: 'mdl-ripple--center',\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n  RIPPLE: 'mdl-ripple',\n  IS_ANIMATING: 'is-animating',\n  IS_VISIBLE: 'is-visible'\n};\n\n/**\n * Handle mouse / finger down on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.downHandler_ = function(event) {\n  'use strict';\n\n  if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n    var rect = this.element_.getBoundingClientRect();\n    this.boundHeight = rect.height;\n    this.boundWidth = rect.width;\n    this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n        rect.height * rect.height) * 2 + 2;\n    this.rippleElement_.style.width = this.rippleSize_ + 'px';\n    this.rippleElement_.style.height = this.rippleSize_ + 'px';\n  }\n\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n    this.ignoringMouseDown_ = false;\n  } else {\n    if (event.type === 'touchstart') {\n      this.ignoringMouseDown_ = true;\n    }\n    var frameCount = this.getFrameCount();\n    if (frameCount > 0) {\n      return;\n    }\n    this.setFrameCount(1);\n    var bound = event.currentTarget.getBoundingClientRect();\n    var x;\n    var y;\n    // Check if we are handling a keyboard click.\n    if (event.clientX === 0 && event.clientY === 0) {\n      x = Math.round(bound.width / 2);\n      y = Math.round(bound.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      x = Math.round(clientX - bound.left);\n      y = Math.round(clientY - bound.top);\n    }\n    this.setRippleXY(x, y);\n    this.setRippleStyles(true);\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n  }\n};\n\n/**\n * Handle mouse / finger up on element.\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialRipple.prototype.upHandler_ = function(event) {\n  'use strict';\n\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.\n  if (event && event.detail !== 2) {\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n  }\n};\n\n/**\n * Initialize element.\n */\nMaterialRipple.prototype.init = function() {\n  'use strict';\n\n  if (this.element_) {\n    var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n    if (!this.element_.classList.contains(\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n      this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n      this.frameCount_ = 0;\n      this.rippleSize_ = 0;\n      this.x_ = 0;\n      this.y_ = 0;\n\n      // Touch start produces a compat mouse down event, which would cause a\n      // second ripples. To avoid that, we use this property to ignore the first\n      // mouse down after a touch start.\n      this.ignoringMouseDown_ = false;\n\n      this.boundDownHandler = this.downHandler_.bind(this);\n      this.element_.addEventListener('mousedown',\n        this.boundDownHandler);\n      this.element_.addEventListener('touchstart',\n          this.boundDownHandler);\n\n      this.boundUpHandler = this.upHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundUpHandler);\n      this.element_.addEventListener('mouseleave', this.boundUpHandler);\n      this.element_.addEventListener('touchend', this.boundUpHandler);\n      this.element_.addEventListener('blur', this.boundUpHandler);\n\n      this.getFrameCount = function() {\n        return this.frameCount_;\n      };\n\n      this.setFrameCount = function(fC) {\n        this.frameCount_ = fC;\n      };\n\n      this.getRippleElement = function() {\n        return this.rippleElement_;\n      };\n\n      this.setRippleXY = function(newX, newY) {\n        this.x_ = newX;\n        this.y_ = newY;\n      };\n\n      this.setRippleStyles = function(start) {\n        if (this.rippleElement_ !== null) {\n          var transformString;\n          var scale;\n          var size;\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n          if (start) {\n            scale = this.Constant_.INITIAL_SCALE;\n            size = this.Constant_.INITIAL_SIZE;\n          } else {\n            scale = this.Constant_.FINAL_SCALE;\n            size = this.rippleSize_ + 'px';\n            if (recentering) {\n              offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                this.boundHeight / 2 + 'px)';\n            }\n          }\n\n          transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n          this.rippleElement_.style.webkitTransform = transformString;\n          this.rippleElement_.style.msTransform = transformString;\n          this.rippleElement_.style.transform = transformString;\n\n          if (start) {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n          } else {\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n          }\n        }\n      };\n\n      this.animFrameHandler = function() {\n        if (this.frameCount_-- > 0) {\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        } else {\n          this.setRippleStyles(false);\n        }\n      };\n    }\n  }\n};\n\n/*\n* Downgrade the component\n*/\nMaterialRipple.prototype.mdlDowngrade_ = function() {\n  'use strict';\n  this.element_.removeEventListener('mousedown',\n  this.boundDownHandler);\n  this.element_.removeEventListener('touchstart',\n      this.boundDownHandler);\n\n  this.element_.removeEventListener('mouseup', this.boundUpHandler);\n  this.element_.removeEventListener('mouseleave', this.boundUpHandler);\n  this.element_.removeEventListener('touchend', this.boundUpHandler);\n  this.element_.removeEventListener('blur', this.boundUpHandler);\n};\n\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n  constructor: MaterialRipple,\n  classAsString: 'MaterialRipple',\n  cssClass: 'mdl-js-ripple-effect',\n  widget: false\n});\n"],"sourceRoot":"/source/"}